# Default values for challenger.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

# -- Which implementation to use, can be one of challenger-go or challenger
implementation: challenger-go

image:
  repository: ghcr.io/chronicleprotocol
  pullPolicy: IfNotPresent
  # -- tag must correspond to what is available at {{ .Values.image.repository }}/{{.Values.implementation}}. default is latest, which may not be desired
  tag: "0.0.2-alpine"

logLevel: null
logFormat: null

# Provide ETH keys from existing secrets
ethConfig: {}
  # ethKeys:
  #   existingSecret: "my-secret-eth"
  #   key: "ethKeyStore"
  # ethPass:
  #   existingSecret: "my-secret-eth"
  #   key: "ethPass"
  # OR you can supply only ETH private key:
  # ethPrivateKey:
  #   existingSecret: "foo"
  #   key: "bar"


ethChainId: null
ethRpcUrl: https://eth.llamarpc.com

# -- If challenger-go, we need a wss endpoint specified:
# subscriptionUrl: wss://ethereum.publicnode.com

contractAddresses:
  - "0xa38C2B5408Eb1DCeeDBEC5d61BeD580589C6e717"


# non encrypted variables
env:
  normal:
    RUST_LOG: debug

imagePullSecrets:
  - name: ghcr-login-secret

nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8080

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# -- Extra K8s manifests to deploy
extraObjects: []
  # - apiVersion: "kubernetes-client.io/v1"
  #   kind: ExternalSecret
  #   metadata:
  #     name: some-secrets
  #   spec:
  #     backendType: someBackend
  #     data:
  #       - key: some-creds
  #         name: client_secret
